{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "SMB Gateway Server",
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": { "default": "SMB Gateway Instance Configuration" },
          "Parameters": [ "VPC", "Subnet", "type"  ]
        },
        {
          "Label": { "default": "SMB Gateway EBS Configuration" },
          "Parameters": [ "cacheSize" ]
        },
        {
          "Label": { "default": "Activation" },
          "Parameters": [  "region" ]
        },
        {
          "Label": { "default": "Security" },
          "Parameters": [ "SecurityGroup" ]
        }
      ],
      "ParameterLabels": {
        "Subnet": { "default": "Subnet:" },
        "VPC": { "default": "VPC:" },
        "cacheSize": { "default": "Gateway Cache Disk Size (GP3):" },
        "type": { "default": "Instance Type:" },
        "SecurityGroup" : { "default" : "Allowed Security Group:" },
        "region" : { "default" : "Activation region:" }
      }
    }
  },
  "Parameters": {
    "Subnet": {
      "Description": "Subnet",
      "Type": "AWS::EC2::Subnet::Id"
    },
    "VPC": {
      "Description": "VPC",
      "Type": "AWS::EC2::VPC::Id"
    },
    "SecurityGroup": {
      "Description": "Security group ID",
      "Type": "AWS::EC2::SecurityGroup::Id",
    },
    "type": {
      "AllowedValues": [ "m5n.micro" ],
      "Default": "m5n.micro",
      "Type": "String"
    },
    "cacheSize": {
      "AllowedValues": [ "10" ],
      "Description": "(GiB)",
      "Default": "10",
      "Type": "String"
    },
    "region": {
      "AllowedValues": [ "eu-central-1" ],
      "Description": "Remote region that the gateway volume data and management with reside in",
      "Default": "eu-central-1",
      "Type": "String"
    },
  },
  "Resources": {
    "SMBGWInstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Path": "/",
        "Roles": [ { "Ref": "SMBGWRole" } ] }
    },
    "SMBGWRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [ {
            "Action": [ "sts:AssumeRole" ],
            "Effect": "Allow",
            "Principal": { "Service": [ "ec2.amazonaws.com" ] }
          }
          ],
          "Version": "2012-10-17"
        }
      }
    },
    "SMBGWRolePolicy": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "storagegateway:*",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ec2:DescribeNetworkInterfaces",
              "Effect": "Allow",
              "Resource": "*"
            },
            {
              "Action": "ec2:CreateTags",
              "Effect": "Allow",
              "Resource": "*"
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "SMBGWRolePolicy",
        "Roles": [ { "Ref": "SMBGWRole" } ]
      }
    },
    "SMBGWSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": { "Ref": "VPC" },
        "GroupDescription": "SMB Gateway Access All Ports",
        "SecurityGroupIngress": [
          { "FromPort": "0", "IpProtocol": "tcp", "SourceSecurityGroupId": { "Ref": "SMBGWSecurityGroup" }, "ToPort": "65535" },
          { "FromPort": "0", "IpProtocol": "udp", "SourceSecurityGroupId": { "Ref": "SMBGWSecurityGroup" }, "ToPort": "65535" },
          { "FromPort": "-1", "IpProtocol": "icmp", "SourceSecurityGroupId": { "Ref": "SMBGWSecurityGroup" }, "ToPort": "-1" }
        ]
      }
    },
    "SMBGWInstance": {
      "Type": "AWS::EC2::Instance",
      "Properties": {
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "", [ "SMB Gateway Server (", { "Ref": "AWS::StackName" }, ")" ] ] } } ],
        "InstanceType": { "Ref" : "type"},
        "IamInstanceProfile": { "Ref": "SMBGWInstanceProfile" },
        "InstanceInitiatedShutdownBehavior": "terminate",
        "ImageId": "ami-d5dc0fac",
        "NetworkInterfaces": [
          {
            "AssociatePublicIpAddress": "true",
            "DeviceIndex": "0",
            "GroupSet": [ { "Ref": "SMBGWSecurityGroup" } ],
            "SubnetId": { "Ref": "Subnet" }
          }
        ],
        "UserData": {
          "Fn::Base64": {
            "Fn::Join": [
              "",
              [
                "#!/bin/bash\n",
                "echo clear log > /var/log/cloud-init-output.log\n",
                "pip install --upgrade awscli &> /tmp/pip\n",
                "/usr/local/bin/aws configure set default.region ", { "Ref": "AWS::Region" },"\n",
                "instance=$(curl http://169.254.169.254/latest/meta-data/instance-id)\n",
                "ip=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)\n",
                "echo $ip\n",
                "name=SMB-Gateway-Server-${instance}\n",
                "gwMode=FILE_S3\n",
                "region=",{ "Ref" : "region" },"\n",
                "complete=0\n",
                "count=1\n",

                "while [ $complete != 2 -a $count != 30 ]; do\n",
                " if [ $count -ne 1 ]; then\n",
                "  sleep 15\n",
                " fi\n",

                "  if [ $complete -eq 0 ]; then\n",
                "   code=$(echo -e \"GET ?gatewayType=${gwMode}&activationRegion=${region} HTTP/1.1\\n\\n\" | nc localhost 8080 | grep -oP 'activationKey=([\\w-]+)' | cut -f2 -d=)\n",
                "   if [[ $code != \"\" ]]; then\n",
                "    gatewayarn=$(/usr/local/bin/aws storagegateway activate-gateway --activation-key ${code} --gateway-name ${name} --gateway-timezone GMT --gateway-type ${gwMode} --gateway-region ${region} --region ${region} --output text)\n",
                "    if [ $? -eq 0 ]; then complete=1; echo ${gatewayarn}; fi\n",
                "   fi\n",
                "  fi\n",

                "  if [ $complete -eq 1 ]; then\n",
                "   disks=$(/usr/local/bin/aws storagegateway list-local-disks --gateway-arn ${gatewayarn} --region ${region} --output text)\n",
                "   disks=$(echo \"$disks\"| awk '{print $4}')\n",
                "   diskarray=($disks)\n",
                "   /usr/local/bin/aws storagegateway add-cache --gateway-arn ${gatewayarn} --disk-ids --region ${region} ${diskarray[0]}\n",
                "   if [ $? -eq 0 ]; then complete=2; fi\n",
                "  fi\n",


                " count=$((count+1))\n",
                "done\n",

                "if [ $complete -eq 2 ]; then\n",
                " /usr/local/bin/aws ec2 create-tags --resources ${instance} --tags \"Key=Name,Value=", "SMB Gateway Server (Activated) - (", { "Ref": "AWS::StackName" }, ")\"\n",
                "else\n",
                " /usr/local/bin/aws ec2 create-tags --resources ${instance} --tags \"Key=Name,Value=", "SMB Gateway Server (FAILED ACTIVATION) - (", { "Ref": "AWS::StackName" }, ")\"\n",
                "fi\n",
                "echo finished\n",
                "cat /var/log/cloud-init-output.log >> /tmp/message\n"
              ]
            ]
          }
        }
      }
    },
    "gwdisk2attach" : {
      "Type":"AWS::EC2::VolumeAttachment",
      "Properties" : {
        "Device" :  "/dev/sdc",
        "InstanceId" : { "Ref" : "SMBGWInstance" },
        "VolumeId" : { "Ref" : "gwdisk2" }
      }
    },
    "gwdisk2" : {
      "Type":"AWS::EC2::Volume",
      "Properties" : {
        "AvailabilityZone" : { "Fn::GetAtt" : [ "SMBGWInstance", "AvailabilityZone" ] },
        "Size" : { "Ref" : "cacheSize" },
        "VolumeType" : "gp3",
        "Tags": [ { "Key": "Name", "Value": { "Fn::Join": [ "", [ "SMB Gateway Server - EBS 2 - Cache (", { "Ref": "AWS::StackName" }, ")" ] ] } } ],
      }
    }
  },
  "Outputs": {}
}